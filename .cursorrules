# AI Toolkit - Cursor Rules

**Version:** 3.0.0
**Mode:** [INJECTED BY bin/ai-mode]

---

## Developer Control

**Rule:** AI proposes, human approves.

- DO NOT implement without explicit approval
- DO show diffs before applying
- DO suggest verification commands (don't auto-run)
- WAIT for "Approve: A1, B3..." before proceeding

---

## Small Changes

**Rule:** Max 200 LOC or ~20 minutes of work per step.

- DO break large features into small items (A1, A2, A3...)
- DO commit incrementally
- DO provide clear rationale for each item

---

## Test Coverage

**Rule:** New functionality requires tests.

- DO write RSpec tests for Rails code
- DO write Jest/Vitest tests for React code
- DO test edge cases (nil, empty, invalid)
- DO verify tests pass before committing

---

## Protected Files

**Rule:** Never modify without explicit approval.

Protected:
- `config/job_wizard/*.yml`
- `.env*` files
- `config/database.yml`
- Deploy configs

---

## Truth Data

**Rule:** No fabricated credentials, skills, or experience.

- DO use realistic test data (Faker gem)
- DO NOT invent user credentials
- DO NOT fabricate project history

---

## Quality Gates

**Rule:** RuboCop/ESLint must pass.

Safe to suggest:
- `bundle exec rubocop -A`
- `bundle exec rspec`
- `npm run lint:fix`
- `just test`

Never auto-run:
- `git push`
- `rails db:migrate` (production)
- `bundle install`
- `rails destroy`

---

## Workflow Sequence

1. **PLANNER** creates plan with questions
2. Human answers
3. **ENGINEER** implements ONE step
4. **CRITIC** reviews against checklist
5. Human approves/revises
6. Repeat

---

## Diagnostic Mode

**Rule:** Use diagnostic.prompt when stuck.

Triggers:
- Repeated bug fix attempts
- Same error after multiple tries
- Unclear root cause

Process: TRACE → PROVE → CLASSIFY → PROPOSE (no edits)

---

## Project Context

Repository: [INJECTED]
Stack: [INJECTED]
Conventions: [INJECTED]

---

## Commands

- `dev plan "Feature"` — Create plan
- `dev scans` — Security/quality scans
- `dev mode [driver|approval|autopilot]` — Switch AI mode
- `just test` — Run tests
- `just lint-fix` — Auto-fix linting
- `scan_here` — Quick security check

---

## Current Mode

[INJECTED BY bin/ai-mode]

See `ai/mode-*.prompt` for mode-specific guidelines.
