#!/usr/bin/env bash
set -euo pipefail

# Preflight checks: secrets safety, gitignore, dependencies
# Usage: dev preflight

TOOLKIT_DIR="${TOOLKIT_DIR:-$HOME/.ai-toolkit}"

red() { echo -e "\033[0;31m$*\033[0m"; }
green() { echo -e "\033[0;32m$*\033[0m"; }
yellow() { echo -e "\033[0;33m$*\033[0m"; }

echo "üîç Running preflight checks..."
echo ""

ERRORS=0

# Check 1: .env is gitignored
if [[ -f .env ]]; then
  if git check-ignore .env &>/dev/null; then
    green "‚úÖ .env is gitignored"
  else
    red "‚ùå .env is NOT gitignored (security risk!)"
    echo "   Fix: Add '.env' to .gitignore"
    ERRORS=$((ERRORS + 1))
  fi
else
  yellow "‚ö†Ô∏è  No .env file found (OK if not using)"
fi

# Check 2: No API keys in tracked files
if git grep -E '(ANTHROPIC_API_KEY|OPENAI_API_KEY|sk-ant-|sk-)' -- '*.rb' '*.sh' '*.yml' '*.yaml' '*.json' &>/dev/null; then
  red "‚ùå Possible API keys found in tracked files!"
  echo "   Files:"
  git grep -l -E '(ANTHROPIC_API_KEY|OPENAI_API_KEY|sk-ant-|sk-)' -- '*.rb' '*.sh' '*.yml' '*.yaml' '*.json' || true
  echo "   Fix: Remove keys, add to .env (gitignored)"
  ERRORS=$((ERRORS + 1))
else
  green "‚úÖ No API keys in tracked files"
fi

# Check 3: Gitleaks available
if command -v gitleaks &>/dev/null; then
  green "‚úÖ Gitleaks installed"

  # Run gitleaks scan
  if gitleaks detect --no-git --quiet &>/dev/null; then
    green "‚úÖ Gitleaks scan passed (no secrets detected)"
  else
    red "‚ùå Gitleaks found potential secrets!"
    echo "   Run: gitleaks detect --no-git --report-path reports/gitleaks.json"
    echo "   Review: cat reports/gitleaks.json"
    ERRORS=$((ERRORS + 1))
  fi
else
  yellow "‚ö†Ô∏è  Gitleaks not installed (recommended for secret scanning)"
  echo "   Install: brew install gitleaks"
fi

# Check 4: Overcommit hooks installed
if [[ -f .overcommit.yml ]]; then
  if [[ -f .git/hooks/pre-commit ]] && grep -q "overcommit" .git/hooks/pre-commit 2>/dev/null; then
    green "‚úÖ Overcommit hooks installed"
  else
    yellow "‚ö†Ô∏è  Overcommit config exists but hooks not installed"
    echo "   Fix: bundle exec overcommit --install"
  fi
else
  yellow "‚ö†Ô∏è  No .overcommit.yml (OK if not using)"
fi

# Check 5: API keys available (if providers exist)
if [[ -d "$TOOLKIT_DIR/providers" ]]; then
  if [[ -n "${ANTHROPIC_API_KEY:-}" ]] || [[ -n "${OPENAI_API_KEY:-}" ]]; then
    green "‚úÖ API keys found in environment"
  else
    yellow "‚ö†Ô∏è  No API keys found (ANTHROPIC_API_KEY, OPENAI_API_KEY)"
    echo "   See: docs/CLAUDE_SETUP.md for setup instructions"
  fi
fi

echo ""
if [[ $ERRORS -eq 0 ]]; then
  green "‚úÖ All preflight checks passed!"
  exit 0
else
  red "‚ùå $ERRORS preflight check(s) failed"
  echo ""
  echo "Fix issues above before committing."
  exit 1
fi
